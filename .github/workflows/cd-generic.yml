name: Continuos deployment reusable workflow

on:
  workflow_call:
    inputs:
      PROJECT_NAME:
        description: 'The name of the project'
        required: true
        type: string
      VAULT_KV_DEVOPS:
        required: true
        type: string
      GCP_PROJECT_ID:
        required: true
        type: string
    secrets:
      VAULT_ADDR:
        required: true
      VAULT_TOKEN:
        required: true
      ORG_GOOGLE_CREDENTIALS:
        required: true
      VPN_CONFIG:
        required: true
      VPN_PASS:
        required: true

jobs:
  cdn_upload:
    needs: build
    name: Upload artifacts to mundi cdn
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Connect to VPN
        uses: munditrade/action-connect_vpn@main
        with:
          vpn_config: ${{ secrets.VPN_CONFIG }}
          vpn_pass: ${{ secrets.VPN_PASS }}

      - name: Import DEVOPS Secrets
        uses: hashicorp/vault-action@v2.3.1
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          method: token
          secrets: |
            ${{ inputs.VAULT_KV_DEVOPS }} DEVOPS_ENV;
            ${{ inputs.VAULT_KV_DEVOPS }} DEVOPS_ENV_DOMAIN;
            ${{ inputs.VAULT_KV_DEVOPS }} DEVOPS_ENV_PRIVATE_DOMAIN;

      - name: Prepare env variables
        run: |
          # set bucket name based on environment
          BUCKET_NAME="${{ inputs.PROJECT_NAME }}-stg"

          if [ "${{ env.DEVOPS_ENV }}" == "prd" ]; then
            BUCKET_NAME="${{ inputs.PROJECT_NAME }}-prd"
          fi

          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

      - uses: google-github-actions/setup-gcloud@v0
        if: ${{ success() }}
        with:
          project_id: ${{ inputs.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.ORG_GOOGLE_CREDENTIALS }}
          export_default_credentials: true

      - uses: actions/download-artifact@v4
        with:
          name: mf-build
          path: dist

      - name: Compress assets
        if: ${{ success() }}
        run: |
          # Find all JS, CSS, HTML, SVG, and JSON files and compress them
          find dist -type f \( -name "*.js" -o -name "*.css" -o -name "*.html" -o -name "*.svg" -o -name "*.json" \) -size +1k | while read file; do
            # Create gzip version
            gzip -9 -k "$file"
            # Create brotli version if available
            if command -v brotli &> /dev/null; then
              brotli -9 -k "$file"
            fi
          done

      - name: Upload bundle
        if: ${{ success() }}
        run: |
          # Upload the entire dist folder structure (index.html + assets-hash folder)
          # This includes original files and compressed versions
          gsutil -m -h "Cache-Control:public, must-revalidate, max-age=10" rsync -r dist/ gs://${{ inputs.BUCKET_NAME }}/

          # The structure will be:
          # gs://bucket/index.html
          # gs://bucket/assets-{unique-hash}/...
