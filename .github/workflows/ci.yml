name: Reusable CI workflow

on:
  workflow_call:
    inputs:
      VAULT_KV_PATH:
        required: true
        type: string
    secrets:
      NPM_REGISTRY_CREDENTIALS:
        required: true
      VAULT_ADDR:
        required: true
      VAULT_TOKEN:
        required: true
      NPM_TOKEN:
        required: false
      GH_TOKEN:
        required: false
      VPN_CONFIG:
        required: true
      VPN_PASS:
        required: true

jobs:
  create-artifacts:
    name: Build project artifacts
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Vault Cli
        uses: eLco/setup-vault@v1
        with:
          vault_version: '1.9.2'

      - name: Connect to VPN
        uses: munditrade/action-connect_vpn@main
        with:
          vpn_config: ${{ secrets.VPN_CONFIG }}
          vpn_pass: ${{ secrets.VPN_PASS }}

      - name: Vault Secrets to env
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        shell: bash
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status

          vault_kv_path="${{ inputs.VAULT_KV_PATH }}"
          env_local=$(echo "$vault_kv_path" | cut -d '/' -f 2)
          cloud_infra_path="cloud-infra-mf/$env_local"

          # Trap errors to provide more informative messages
          trap 'echo "Error fetching secrets from $cloud_infra_path: $@" >&2' ERR

          # Fetch secrets and handle potential errors
          vault kv get -format yaml -field=data "$vault_kv_path" | sed 's/: /=/' > env-local
          vault kv get -format yaml -field=data "$cloud_infra_path" | sed 's/: /=/' > env-cloud
          
          sort -u -t '=' -k 1,1 env-cloud env-mf > .env

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.NPM_REGISTRY_CREDENTIALS }}'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Login to Artifact Registry
        run: npm run artifactregistry-login

      - name: Clean cache 
        run: npm cache clean --force
      
      - name: Install dependencies
        run: npm ci --no-fund --ignore-scripts --legacy-peer-deps

      - run: npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: mf-build
          path: ./dist
          retention-days: 2

  lint-test:
    name: Run linting rules and unit tests
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.NPM_REGISTRY_CREDENTIALS }}'
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Login to Artifact Registry
        run: npm run artifactregistry-login

      - name: Clean cache 
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci --no-fund --ignore-scripts --legacy-peer-deps

      - run: npm test -- --passWithNoTests

      - run: npm run lint
