name: Reusable CI workflow

on:
  workflow_call:
    inputs:
      VAULT_KV_PATH:
        required: true
        type: string
    secrets:
      VAULT_ADDR:
        required: true
      VAULT_TOKEN:
        required: true
      NPM_TOKEN:
        required: false
      GH_TOKEN:
        required: false

jobs:
  create-artifacts:
    name: Build project artifacts
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Vault Cli
        uses: eLco/setup-vault@v1
        with:
          version: '~1.9.2'

      - name: Vault Secrets to env
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: "vault kv get -format yaml -field=data ${{ inputs.VAULT_KV_PATH }}| sed 's/: /=/' > .env"

      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci --omit=dev --ignore-scripts

      - run: npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: mf-build
          path: ./dist
          retention-days: 2

  lint-test:
    name: Run linting rules and unit tests
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci --omit=dev --ignore-scripts

      - run: npm test -- --passWithNoTests

      - run: npm run lint